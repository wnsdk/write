pipeline{
    agent any

    environment {
        IMAGE_NAME = "be"
        CONTAINER_NAME = "be"
        JASYPT_KEY = credentials('jasypt-key')
    }

    stages{
        stage('Clone Repo'){
            steps{
                git url: 'https://github.com/wnsdk/write.git',
                    credentialsId: 'github-credential', // Jenkins에서 설정한 credential의 ID
                    branch: 'be/main'
            }
        }

        // 스프링 테스트 코드를 통과하는지 확인한다.
        stage('Deployment Test') {
            steps {
                echo 'Running Deployment Test...'
                dir('be/') {
                    sh 'chmod +x ./gradlew'
                    sh './gradlew clean test -Djasypt.encryptor.password=${JASYPT_KEY} --info'
                }
            }
        }

	stage('Deploy Docker'){
            steps{
                script{
                    sh "docker-compose -f docker-compose.yml pull"
                    sh "COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1"
                    sh "docker-compose -f docker-compose.yml build --build-arg JASYPT_ENCRYPTOR_PASSWORD=${JASYPT_KEY} --no-cache"
                    sh "docker-compose -f docker-compose.yml up --build be -d --remove-orphans"
                }
            }
        }

        stage('Finish'){
            steps{
                script{
                    sh "docker rmi -f \$(docker images -f \"dangling=true\" -q) || true"
                }
            }
        }

	    post {
		success {
		    echo 'Deployment completed successfully.'
		}
		failure {
		    echo 'Deployment failed.'
		}
	    }
        }
    }
