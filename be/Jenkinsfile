pipeline{
    agent any

    environment {
        IMAGE_NAME = "be"
        CONTAINER_NAME = "be"
        JASYPT_KEY = credentials('jasypt-key')
    }

    stages{
        stage('Clone Repo'){
            steps{
                git url: 'https://github.com/wnsdk/write.git',
                    credentialsId: 'github-credential', // Jenkins에서 설정한 credential의 ID
                    branch: 'be/main'
            }
        }

        // 스프링 테스트 코드를 통과하는지 확인한다.
        stage('Deployment Test') {
            steps {
                echo 'Running Deployment Test...'
                dir('be/') {
                    sh 'chmod +x ./gradlew'
                    sh './gradlew clean test -Djasypt.encryptor.password=${JASYPT_KEY} --info'
                }
            }
        }

        stage('Gradle Build'){
            steps{
                dir('be/'){
                    sh 'chmod +x ./gradlew'
                    sh './gradlew clean build -x test'
                }
            }
        }

        stage('Build Docker Image'){
            steps{
                script{
                    sh "docker build -t ${IMAGE_NAME}:${env.BUILD_NUMBER} --build-arg JASYPT_ENCRYPTOR_PASSWORD=${JASYPT_KEY} be/"
                }
            }
        }

        stage('Deploy Docker'){
            steps{
                script {
                    // 기존 컨테이너가 있으면 중지하고 삭제
                    sh "docker rm -f ${CONTAINER_NAME} || true"

                    // 새로운 Docker 컨테이너 실행 
                    sh "docker run --name ${CONTAINER_NAME} -p 8080:8443 -d --network db --network nginx --network redis ${IMAGE_NAME}:${env.BUILD_NUMBER} -e JASYPT_ENCRYPTOR_PASSWORD=${JASYPT_KEY} -e JAVA_OPTS='-Djasypt.encryptor.password=${JASYPT_KEY}'"
                    
                    // 사용하지 않는 Docker 이미지를 정리
                    sh "docker image prune -a -f || true"
                }
            }

            post {
                success {
                    echo 'Deployment completed successfully.'
                }
                failure {
                    echo 'Deployment failed.'
                }
            }
        }
    }
}
